/* Desktop view aka global view */
body {
  margin: 0px;
  font-family: "Asap", sans-serif;
  color: white;
  background-color: #EBEBEB;
}

h1 {
  font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
    "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
  color: brown;
}




/* .empty-space {
  min-height: 135px;
} */

logo {
  font-size: 1em;
}

a {
  text-decoration: none;
  color: white;
}

/* I like to write div.container but if I write .container it's just as good */
div.container {
  /* background-color: rgb(43, 226, 195); */
  max-width: 1024px;
  min-height: 500px;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  padding-top: 140px;
}

div.header-container  {
  /* background-color: khaki; */
  background-color: rgb(97, 92, 92);

  min-height: 100px;
  /* margin-bottom: 40px; */
  width: 100%;
  /* don't forget the width */
  position: fixed;
}

header {
  /* background-color: rgb(97, 92, 92); */
  max-width: 1024px;
  min-height: 100px;
  margin:0 auto;
  display: flex;
  justify-content: space-between;
  align-items: center;
 
}

.col {
  /* background-color: blueviolet; */
  /* we don't need background color for the boxes to get and idea of their size */
  /* min-height: 200px; */
  /* we don't need the height here since we now have .col img height set to auto */
  width: 30%;
  margin-bottom: 40px;
  background-color: rgb(43, 226, 195);
}

/* 14px * 0.0625 = .875rem */
/* 1.5rem / 0.0625 = 24px */
/* the trick is that the line-height be always larger than the font size */
.col p {
  font-size: 0.875rem;
  padding: 20px 25px;
  line-height: 1.25rem;
}

.col img {
  width: 100%;
  height: auto;
}
/* you can say bold or 700 for the font weight */
.col p::first-line {
  font-weight: bold;
}

.hide-desktop-only {
  display: none;
}



.mybutton {
  padding: 10px 55px;
  /* border: white; */
  /* border: solid;
  border-width: 1px; */
  border: 1px solid white;
  margin-left: 20px;
  }
/* span {
  font-weight: bold;
} */

/* You cld also create a class for span. Probably the best option bc if you need to use span again in a different manner you wld have to anyways */
/* <span class="highlight"> html / .highlight { font-weight: 700;} CSS */

.navbuttons {
  display: inline-block;
  position: relative;
}



.footer-container {

  min-height: 100px;

}

footer {
  max-width: 1024px;
  margin: auto;
  min-height: 100px;
  background-color: rgb(97, 92, 92);
}

.colb {
  font-size: 0.875rem;
  padding: 35px 0px;
  line-height: 1.25rem;
}

div.containerb {
max-width: 1024px;
min-height: 100px;
display: flex;
flex-wrap: wrap;
margin: auto;
justify-content: space-between;
}





/* Tablet View */
@media (max-width: 768px){
    
  .col {
      width: 45%;
  }
  
  .hide-desktop-only {
      display: block;
  }
  
  header {
      display: block;
      text-align: center;
  }
  .header-container {
      position: relative;
  }
  
  .container {
      padding-top: 40px;
  }
  
  nav a {
      display: block;
     }
  
  .logo {
      padding: 40px 0; 
  }
  
  .mybutton {
      margin-left: 0;
  }
  
  
  }
